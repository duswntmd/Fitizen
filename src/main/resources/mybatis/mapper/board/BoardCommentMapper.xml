<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sku.fitizen.mapper.board.BoardCommentMapper">

    <resultMap id="commentResultMap" type="com.sku.fitizen.domain.board.BoardComment">
        <id property="cno" column="cno"/>
        <result property="bno" column="bno"/>
        <result property="pcno" column="pcno"/>
        <result property="comments" column="comments"/>
        <result property="commenter" column="commenter"/>
        <result property="regDate" column="reg_date"/>
        <result property="upDate" column="up_date"/>
        <result property="depth" column="depth" />
        <result property="isDeleted" column="is_deleted"/>
    </resultMap>

    <!-- 댓글 전체 삭제 (특정 게시글) -->
    <delete id="deleteAll" parameterType="long">
        DELETE FROM board_comment
        WHERE bno = #{bno}
    </delete>

    <!-- 댓글 개수 조회 (특정 게시글) -->
    <select id="count" parameterType="long" resultType="int">
        SELECT count(*) FROM board_comment
        WHERE bno = #{bno}
    </select>

    <!-- 논리적 댓글 삭제 상태 변경 -->
    <update id="markAsDeleted" parameterType="map">
        UPDATE board_comment
        SET is_deleted = 1
        WHERE cno = #{cno} AND commenter = #{commenter}
    </update>

    <!-- 논리적 삭제된 댓글의 물리적 삭제 (대댓글 없는 경우) -->
    <delete id="deletePhysically" parameterType="long">
        DELETE FROM board_comment
        WHERE cno = #{cno}
    </delete>

    <!-- 대댓글이 남아있는지 확인 -->
    <select id="countNonDeletedReplies" parameterType="long" resultType="int">
        SELECT COUNT(*)
        FROM board_comment
        WHERE pcno = #{cno} AND is_deleted = 0
    </select>

    <select id="findParentCno" parameterType="long" resultType="long">
        SELECT pcno FROM board_comment WHERE cno = #{cno}
    </select>

    <!-- 특정 댓글이 논리적으로 삭제되었는지 확인 -->
    <select id="isDeleted" parameterType="long" resultType="boolean">
        SELECT is_deleted
        FROM board_comment
        WHERE cno = #{cno}
    </select>

    <!-- 댓글 추가 -->
    <insert id="insert" parameterType="com.sku.fitizen.domain.board.BoardComment" useGeneratedKeys="true" keyProperty="cno" keyColumn="cno">
        INSERT INTO board_comment
            (cno, bno, pcno, comments, commenter, reg_date)
        VALUES
            (board_comment_seq.NEXTVAL, #{bno}, #{pcno,jdbcType=INTEGER}, #{comments}, #{commenter}, SYSDATE)
    </insert>

    <!-- 댓글 조회 (특정 게시글 전체) -->
    <select id="selectAll" parameterType="long" resultMap="commentResultMap">
        SELECT cno, pcno, comments, commenter, LEVEL AS depth ,is_deleted, reg_date, up_date
        FROM board_comment
        WHERE bno = #{bno}
        START WITH pcno IS NULL
        CONNECT BY PRIOR cno = pcno
        ORDER SIBLINGS BY cno
    </select>

    <!-- 특정 댓글 조회 -->
    <select id="select" parameterType="long" resultMap="commentResultMap">
        SELECT cno, bno, pcno, comments, commenter, reg_date, up_date
        FROM board_comment
        WHERE cno = #{cno}
    </select>

    <!-- 댓글 수정 -->
    <update id="update" parameterType="com.sku.fitizen.domain.board.BoardComment">
        UPDATE board_comment
        SET comments = #{comments},
            up_date = SYSDATE
        WHERE cno = #{cno} AND commenter = #{commenter}
    </update>

    <!-- 특정 게시글의 논리적으로 삭제되지 않은 댓글 수 조회 -->
    <select id="countCommentsByBoard" resultType="int">
        SELECT count(*)
        FROM board_comment
        WHERE bno = #{bno} AND is_deleted = #{isDeleted}
    </select>

    <delete id="deleteAllByBoard" parameterType="long">
        DELETE FROM board_comment WHERE bno = #{bno}
    </delete>

</mapper>
