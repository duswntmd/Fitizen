<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sku.fitizen.mapper.Trainer.ConsultationMapper">


    <!-- 상담 엮인 유저 아이디 목록  유저, 트레이너 컬럼: userId-->
    <select id="getUserIdsByConsultId" parameterType="int" resultType="string">
        SELECT
            TC.USERID AS "userId"
        FROM
            TRAINERCONSULTATION TC
        WHERE
            TC.CONSULTID = #{consultId}

        UNION

        SELECT
            T.USERID AS "userId"
        FROM
            TRAINERCONSULTATION TC
                JOIN
            TRAINERS T ON TC.TRAINERNO = T.TRAINERNO
        WHERE
            TC.CONSULTID = #{consultId}

    </select>


    <!--상담 신청-->
    <insert id="saveConsultation" parameterType="com.sku.fitizen.domain.Trainer.Consultation">

      INSERT  INTO TRAINERCONSULTATION (CONSULTID,USERID,TRAINERNO) VALUES (CONSULT_SEQ.nextval,#{userId},#{trainerNo})
    </insert>

    <!--상담 재신청 -->
    <update id="reapplyConsultation" parameterType="com.sku.fitizen.domain.Trainer.Consultation">
        update TRAINERCONSULTATION SET  STATUS='REQUESTED' WHERE USERID=#{userId} AND TRAINERNO=#{trainerNo}
    </update>

    <!--유저 :상담 신청에서-->
    <select id="existByUserId" parameterType="com.sku.fitizen.domain.Trainer.Consultation">
        SELECT COUNT(*) FROM  TRAINERCONSULTATION WHERE  userId=#{userId} AND TRAINERNO =#{trainerNo}
    </select>


    <!-- 트레이너에게 신청된 상담 유저 목록 조회 -->
    <select id="getMyUsers" resultType="map">
        SELECT u.NAME AS "userName", tc.STATUS AS "status",
               tc.USERID AS "userId",
               tc.CONSULTID AS "consultId"

        FROM TRAINERCONSULTATION tc
                 JOIN TRAINERS t ON tc.TRAINERNO = t.TRAINERNO
                 JOIN USERS u ON tc.USERID = u.USERNAME
        WHERE t.TRAINERNO = #{trainerNo} AND (tc.STATUS= 'REQUESTED' or tc.STATUS= 'REJECTED')
    </select>

    <!-- 트레이너에게 신청된 상담 유저 목록 조회 -->
    <select id="getMyUsersByApproved" resultType="map">
        SELECT u.NAME AS "userName", tc.STATUS AS "status",
               tc.USERID AS "userId",
               tc.CONSULTID AS "consultId"

        FROM TRAINERCONSULTATION tc
                 JOIN TRAINERS t ON tc.TRAINERNO = t.TRAINERNO
                 JOIN USERS u ON tc.USERID = u.USERNAME
        WHERE t.TRAINERNO = #{trainerNo} AND tc.STATUS= 'APPROVED'
    </select>

    <!-- 일반 유저가 신청한 상담 트레이너 조회 -->
    <select id="getMyTrainers" resultType="map">
        SELECT u.NAME AS "trainerName",
               t.WORKPLACENAME AS "workPlaceName",
               t.LOCATION AS "location",
               tc.STATUS AS "status",
               tc.TRAINERNO AS "trainerNo",
               tc.CONSULTID AS "consultId"

        FROM TRAINERCONSULTATION tc
                 JOIN TRAINERS t ON tc.TRAINERNO = t.TRAINERNO
                 JOIN USERS u ON t.USERID = u.USERNAME
        WHERE tc.USERID = #{userId} and (tc.STATUS ='REQUESTED' OR tc.STATUS ='REJECTED')
    </select>

    <!-- 일반 유저가  신청한 승인된 상담 트레이너 조회 -->
    <select id="getMyTrainersByApproved" resultType="map">
        SELECT u.NAME AS "trainerName",
               t.WORKPLACENAME AS "workPlaceName",
               t.LOCATION AS "location",
               tc.STATUS AS "status",
               tc.TRAINERNO AS "trainerNo",
               tc.CONSULTID AS "consultId"

        FROM TRAINERCONSULTATION tc
                 JOIN TRAINERS t ON tc.TRAINERNO = t.TRAINERNO
                 JOIN USERS u ON t.USERID = u.USERNAME
        WHERE tc.USERID = #{userId} and tc.STATUS ='APPROVED'
    </select>

    <!--상담 취소-->
    <delete id="cancel" parameterType="com.sku.fitizen.domain.Trainer.Consultation">

      DELETE FROM TRAINERCONSULTATION WHERE USERID=#{userId} AND TRAINERNO=#{trainerNo}

    </delete>

    <!--트레이너  유저의 상담 요청 승인 -->
    <update id="approve" parameterType="com.sku.fitizen.domain.Trainer.Consultation">
      UPDATE TRAINERCONSULTATION SET STATUS='APPROVED'
      WHERE TRAINERNO=#{trainerNo} AND USERID=#{userId}
    </update>

    <!--트레이너  유저의 상담 거절-->
    <update id="reject" parameterType="com.sku.fitizen.domain.Trainer.Consultation">
        UPDATE TRAINERCONSULTATION SET STATUS='REJECTED'
        WHERE TRAINERNO=#{trainerNo} AND USERID=#{userId}
    </update>


    <!--유저가 속한 상담 아이디 목록-->
    <select id="getConsultIdsByUser" parameterType="com.sku.fitizen.Dto.ConsultLastMessageDTO" resultType="int">
        SELECT CONSULTID
        FROM TRAINERCONSULTATION
        <where>
            <if test="userId != null">
                USERID = #{userId}
            </if>
            <if test="trainerId != 0">
                TRAINERNO = #{trainerId}
            </if>
        </where>
    </select>


</mapper>
