<?xml version="1.0" encoding="UTF-8" ?>
        <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
                "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sku.fitizen.mapper.PaymentMapper">


    <!--결제 정보저장(fitizen store)-->

    <insert id="insertOrder" parameterType="com.sku.fitizen.Dto.orderProductDTO" useGeneratedKeys="true" keyProperty="orderId" keyColumn="orderId">
        INSERT INTO orders (ORDERID, USERID, IMPUID, MERCHANTUID, TOTALPRICE, PAIDAT ,USEPOINT)
        VALUES (ORDER_SEQ.nextval, #{userId}, #{impUid}, #{merchantUid}, #{totalPrice}, SYSDATE,#{appliedPoints})
    </insert>


    <insert id="insertOrderProduct" parameterType="map">
        INSERT INTO orderProducts
        VALUES (ORDERPAY_SEQ.nextval, #{orderId}, #{product.product_id}, #{product.qty},
                #{product.product_name}, #{product.product_price},#{product.price})
    </insert>


    <!-- 결제 정보 저장-->
    <insert id="savePayment" parameterType="com.sku.fitizen.domain.pay.Payment" >
        INSERT INTO payment (
            paymentId,
            userId,
            impUid,
            merchantUid,
            PAID_AMOUNT,
            POINT,
            paidAt
        ) VALUES (
                     PAYMENT_SEQ.nextval,
                     #{userId},
                     #{impUid},
                     #{merchantUid},
                     #{paid_amount},
                     #{point},
                     SYSDATE
                 )
    </insert>


    <!-- 결제 내역 -->
    <select id="getPaymentList" parameterType="com.sku.fitizen.domain.pay.Payment">

         SELECT  * FROM  PAYMENT
         WHERE  USERID =#{userId}

    </select>

    <resultMap id="SpendingPointResultMap" type="com.sku.fitizen.domain.pay.SpendingPoint">
        <id property="spendingId" column="SPENDINGID"/>
        <result property="userId" column="USERID"/>
        <result property="spendingPoint" column="SPENT_POINT"/>
        <result property="spentAt" column="SPENTAT"/>
    </resultMap>


    <select id="getSpendingPointList" resultMap="SpendingPointResultMap">
        SELECT * FROM SPENDINGPOINT
        WHERE USERID = #{userId}
        ORDER BY SPENDINGID DESC
    </select>


    <!--사용 포인트 기록 -->
    <select id="saveSpendingPoint" parameterType="com.sku.fitizen.domain.pay.SpendingPoint">
        INSERT  INTO  SPENDINGPOINT VALUES (SPENT_SEQ.nextval,#{userId},#{spendingPoint},SYSDATE,#{status},#{detail})
    </select>

    <select id="getBalanceByUserId" parameterType="String" resultType="Integer">
        SELECT
            NVL((SELECT SUM(PAYMENT.POINT) FROM PAYMENT WHERE USERID = #{userId}), 0)
                -
            NVL((SELECT NVL(SUM(SPENT_POINT), 0)
                 FROM SPENDINGPOINT
                 WHERE USERID = #{userId}
                   AND STATUS = 0), 0)
                +
            NVL((SELECT NVL(SUM(SPENT_POINT), 0)
                 FROM SPENDINGPOINT
                 WHERE USERID = #{userId}
                   AND STATUS = 1), 0)
                +
        NVL((SELECT NVL(SUM(REWARDS.REWARDPOINTS), 0)
             FROM REWARDS
             WHERE USERID = #{userId}), 0) AS balance
        FROM DUAL
    </select>

    <!--지급된 포인트 목록:유저 마이페이지 -->
    <select id="myRewards"  parameterType="String" resultType="com.sku.fitizen.domain.challenge.Rewards">
        SELECT * FROM  REWARDS WHERE USERID=#{userId}
    </select>


    <!-- 특정 사용자 주문과 주문상품 조회 -->
    <select id="getOrderProductsByUserId" parameterType="map" resultMap="orderResultMap">
        SELECT
            o.ORDERID,
            o.USERID,
            o.IMPUID,
            o.MERCHANTUID,
            o.TOTALPRICE AS ORDER_TOTAL,
            o.PAIDAT,
            o.usePoint,
            op.PRODUCTID,
            op.PRODUCTNAME,
            op.QTY,
            op.PRICE,
            op.TOTALPRICE AS PRODUCT_TOTAL,
            p.PRIMAGE AS PRODUCT_IMAGE,
            p.PRDESC AS PRODUCT_DESCRIPTION
        FROM
            ORDERS o
                JOIN
            ORDERPRODUCTS op ON o.ORDERID = op.ORDERID
                JOIN PRODUCT p ON op.PRODUCTID = p.PRID
        WHERE
            o.USERID = #{userId} AND
            o.IS_CANCELLED = #{no}
        ORDER BY
            o.PAIDAT DESC,
            o.ORDERID
    </select>

    <update id="cancelOrder" parameterType="map">
        UPDATE orders
        SET IS_CANCELLED = 1,
            PAIDAT = SYSDATE
        WHERE IMPUID = #{impUid}
          AND MERCHANTUID = #{merchantUid}
    </update>
    <!-- ResultMap 정의 -->
    <resultMap id="orderResultMap" type="com.sku.fitizen.domain.store.Order">
        <!-- 주문(Order) 매핑 -->
        <id property="orderId" column="ORDERID" />
        <result property="userId" column="USERID" />
        <result property="impUid" column="IMPUID" />
        <result property="merchantUid" column="MERCHANTUID" />
        <result property="totalPrice" column="ORDER_TOTAL" />
        <result property="usePoint" column="USEPOINT"/>
        <result property="paidAt" column="PAIDAT" />

        <!-- 주문상품(OrderProduct) 매핑 -->
        <collection property="orderProductList" ofType="com.sku.fitizen.domain.store.OrderProduct">
            <result property="productId" column="PRODUCTID" />
            <result property="productName" column="PRODUCTNAME" />
            <result property="qty" column="QTY" />
            <result property="price" column="PRICE" />
            <result property="totalPrice" column="PRODUCT_TOTAL" />
            <result property="productImage" column="PRODUCT_IMAGE" />
            <result property="productDesc" column="PRODUCT_DESCRIPTION" />
        </collection>
    </resultMap>

</mapper>

