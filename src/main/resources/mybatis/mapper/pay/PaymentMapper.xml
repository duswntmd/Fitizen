<?xml version="1.0" encoding="UTF-8" ?>
        <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
                "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sku.fitizen.mapper.PaymentMapper">


    <!--결제 정보저장(fitizen store)-->


    <insert id="insertOrder" parameterType="com.sku.fitizen.Dto.orderProductDTO" useGeneratedKeys="true" keyProperty="orderId" keyColumn="orderId">
        INSERT INTO orders (ORDERID, USERID, IMPUID, MERCHANTUID, TOTALPRICE, PAIDAT)
        VALUES (ORDER_SEQ.nextval, #{userId}, #{impUid}, #{merchantUid}, #{totalPrice}, SYSDATE)
    </insert>


    <insert id="insertOrderProduct" parameterType="map">
        INSERT INTO orderProducts
        VALUES (ORDERPAY_SEQ.nextval, #{orderId}, #{product.product_id}, #{product.qty},
                #{product.product_name}, #{product.product_price},#{product.price})
    </insert>


    <!-- 결제 정보 저장-->
    <insert id="savePayment" parameterType="com.sku.fitizen.domain.pay.Payment" >
        INSERT INTO payment (
            paymentId,
            userId,
            impUid,
            merchantUid,
            PAID_AMOUNT,
            POINT,
            paidAt
        ) VALUES (
                     PAYMENT_SEQ.nextval,
                     #{userId},
                     #{impUid},
                     #{merchantUid},
                     #{amount},
                     #{point},
                     SYSDATE
                 )
    </insert>


    <!-- 결제 내역 -->
    <select id="getPaymentList" parameterType="com.sku.fitizen.domain.pay.Payment">

         SELECT  * FROM  PAYMENT
         WHERE  USERID =#{userId}

    </select>


    <!--사용 포인트 기록 -->
    <select id="saveSpendingPoint" parameterType="com.sku.fitizen.domain.SpendingPoint">
        INSERT  INTO  SPENDINGPOINT VALUES (SPENT_SEQ.nextval,#{userId},#{spendingPoint},SYSDATE)
    </select>

    <!--개인 보유 잔액(포인트)-->
    <select id="getBalanceByUserId" parameterType="String" resultType="Integer">
        SELECT
            NVL((SELECT SUM(PAYMENT.POINT) FROM PAYMENT WHERE USERID = #{userId}), 0)
                - NVL((SELECT SUM(SPENT_POINT) FROM SPENDINGPOINT WHERE USERID = #{userId}), 0)
                AS balance
        FROM DUAL
    </select>



</mapper>

